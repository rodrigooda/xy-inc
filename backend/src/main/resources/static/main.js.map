{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/category/category-add/category-add.component.html","webpack:///./src/app/category/category-add/category-add.component.scss","webpack:///./src/app/category/category-add/category-add.component.ts","webpack:///./src/app/category/category-detail/category-detail.component.html","webpack:///./src/app/category/category-detail/category-detail.component.scss","webpack:///./src/app/category/category-detail/category-detail.component.ts","webpack:///./src/app/category/category-edit/category-edit.component.html","webpack:///./src/app/category/category-edit/category-edit.component.scss","webpack:///./src/app/category/category-edit/category-edit.component.ts","webpack:///./src/app/category/category-list/category-list.component.html","webpack:///./src/app/category/category-list/category-list.component.scss","webpack:///./src/app/category/category-list/category-list.component.ts","webpack:///./src/app/core/home/home.component.html","webpack:///./src/app/core/home/home.component.scss","webpack:///./src/app/core/home/home.component.ts","webpack:///./src/app/core/nav/nav.component.html","webpack:///./src/app/core/nav/nav.component.scss","webpack:///./src/app/core/nav/nav.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/service/authentication.service.ts","webpack:///./src/app/service/category.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './core/home/home.component';\nimport { CategoryDetailComponent } from './category/category-detail/category-detail.component';\nimport { CategoryEditComponent } from './category/category-edit/category-edit.component';\nimport { CategoryListComponent } from './category/category-list/category-list.component';\nimport { CategoryAddComponent } from './category/category-add/category-add.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent, pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'category-add', component: CategoryAddComponent },\n  { path: 'category-list', component: CategoryListComponent },\n  { path: 'category-edit/:id', component: CategoryEditComponent },\n  { path: 'category-detail/:id', component: CategoryDetailComponent },\n  {path : '', component : LoginComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<app-nav></app-nav>\\n<div class=\\\"container\\\">\\n    <main>\\n        <router-outlet></router-outlet>\\n    </main>\\n</div>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthenticationService } from './service/authentication.service';\nimport { CategoryService } from './service/category.service';\nimport { CategoryListComponent } from './category/category-list/category-list.component';\nimport { CategoryDetailComponent } from './category/category-detail/category-detail.component';\nimport { CategoryAddComponent } from './category/category-add/category-add.component';\nimport { LoginComponent } from './login/login.component';\nimport { CategoryEditComponent } from './category/category-edit/category-edit.component';\nimport { NavComponent } from './core/nav/nav.component';\nimport { HomeComponent } from './core/home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CategoryListComponent,\n    CategoryDetailComponent,\n    CategoryAddComponent,\n    LoginComponent,\n    CategoryEditComponent,\n    NavComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule\n  ],\n  providers: [AuthenticationService, CategoryService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"col-md-6\\\">\\n    <h2 class=\\\"text-center\\\">Cadastro de Categoria</h2>\\n    <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"code\\\">Código:</label>\\n        <input type=\\\"text\\\" formControlName=\\\"code\\\" placeholder=\\\"Código\\\" name=\\\"code\\\" class=\\\"form-control\\\" id=\\\"code\\\">\\n        <div *ngIf=\\\"addForm.invalid\\\">Código é obrigatório</div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleFormControlSelect1\\\">Status</label>\\n          <select class=\\\"form-control\\\" id=\\\"status\\\" formControlName=\\\"status\\\" id=\\\"status\\\" disabled>\\n            <option [ngValue]=\\\"true\\\">ATIVO</option>\\n          </select>\\n        </div>\\n        <div class=\\\"btn-toolbar\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Salvar</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onCancel($event)\\\" style=\\\"margin-left: 20px;\\\">Cancelar</button>\\n        </div>\\n        </form>\\n  </div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { CategoryService } from './../../service/category.service';\n\n@Component({\n  selector: 'app-category-add',\n  templateUrl: './category-add.component.html',\n  styleUrls: ['./category-add.component.scss']\n})\nexport class CategoryAddComponent implements OnInit {\n  addForm: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder, private router: Router, private categoryService: CategoryService) { }\n\n  ngOnInit() {\n\n    this.addForm = this.formBuilder.group({\n      code: ['', Validators.required],\n      status: [true]\n    });\n\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.addForm.invalid) {\n      return;\n    }\n    this.categoryService.createCategory(this.addForm.value)\n      .subscribe( data => {\n        this.router.navigate(['category-list']);\n      });\n  }\n\n  onCancel (event) {\n    this.router.navigate(['category-list']);\n  }\n}\n","module.exports = \"<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n      <h4 class=\\\"card-title\\\">Detalhes da Categoria</h4>\\n      <p class=\\\"card-text\\\">Id: {{ category.id }}</p>\\n      <p class=\\\"card-text\\\">Code: {{ category.code }}</p>\\n      <p class=\\\"card-text\\\">Status: {{ category.status }}</p>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onCancel($event)\\\">Cancelar</button>\\n    </div>\\n  </div>\"","module.exports = \"\"","import { Category } from './../../model/category';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CategoryService } from './../../service/category.service';\n@Component({\n  selector: 'app-category-detail',\n  templateUrl: './category-detail.component.html',\n  styleUrls: ['./category-detail.component.scss']\n})\nexport class CategoryDetailComponent implements OnInit {\n  private category: Category;\n\n  constructor(private router: Router,\n     private categoryService: CategoryService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.categoryService.getCategoryById(params['id']).subscribe( data => {\n        this.category = data;\n      });\n    });\n\n\n\n  }\n\n  onCancel (event) {\n    this.router.navigate(['category-list']);\n  }\n\n}\n","module.exports = \"<div class=\\\"col-md-6\\\">\\n    <h2 class=\\\"text-center\\\">Cadastro de Categoria</h2>\\n    <form *ngIf=\\\"addForm\\\" [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"code\\\">Código:</label>\\n        <input type=\\\"text\\\" formControlName=\\\"code\\\" placeholder=\\\"Código\\\" name=\\\"code\\\" class=\\\"form-control\\\" id=\\\"code\\\">\\n        <div *ngIf=\\\"addForm.invalid\\\">Código é obrigatório</div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"exampleFormControlSelect1\\\">Status</label>\\n          <select class=\\\"form-control\\\" id=\\\"status\\\" formControlName=\\\"status\\\" id=\\\"status\\\">\\n            <option [ngValue]=\\\"true\\\">ATIVO</option>\\n            <option [ngValue]=\\\"false\\\">INATIVO</option>\\n          </select>\\n        </div>\\n          <div class=\\\"btn-toolbar\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Atualizar</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onCancel($event)\\\" style=\\\"margin-left: 20px;\\\">Cancelar</button>\\n          </div>\\n    </form>\\n  </div>\\n\"","module.exports = \"\"","import { Category } from './../../model/category';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CategoryService } from './../../service/category.service';\n@Component({\n  selector: 'app-category-edit',\n  templateUrl: './category-edit.component.html',\n  styleUrls: ['./category-edit.component.scss']\n})\nexport class CategoryEditComponent implements OnInit {\n  addForm: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder, private router: Router,\n     private categoryService: CategoryService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.categoryService.getCategoryById(params['id']).subscribe( data => {\n        const category: Category = data;\n        this.addForm = this.formBuilder.group({\n          'id': [category.id],\n          'code': [category.code, Validators.required],\n          'status': [category.status]\n        });\n      });\n    });\n\n\n\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.addForm.invalid) {\n      return;\n    }\n    this.categoryService.createCategory(this.addForm.value)\n      .subscribe( data => {\n        this.router.navigate(['category-list']);\n      });\n  }\n\n  onCancel (event) {\n    this.router.navigate(['category-list']);\n  }\n}\n","module.exports = \"<div class=\\\"col-md-6\\\">\\n  <h2> Lista de Categorias </h2>\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"addCategory()\\\"> Adicionar Categoria</button>\\n  <table class=\\\"table-responsive-md table-striped\\\">\\n    <thead>\\n    <tr>\\n      <th class=\\\"hidden\\\">Id</th>\\n      <th>Código</th>\\n      <th>Status</th>\\n      <th>Ações</th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let category of categories\\\">\\n      <td class=\\\"hidden\\\">{{ category.id }}</td>\\n      <td>{{ category.code }}</td>\\n      <td>{{ category.status ? 'ATIVO' : 'INATIVO' }}</td>\\n      <td>\\n        <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteCategory(category)\\\" style=\\\"margin-left: 10px;\\\"> Apagar </button>\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"editCategory(category)\\\" style=\\\"margin-left: 10px;\\\"> Editar </button>\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"detailCategory(category)\\\" style=\\\"margin-left: 10px;\\\"> Detalhar </button>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CategoryService } from '../../service/category.service';\nimport { Category } from '../../model/category';\n\n@Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.scss']\n})\nexport class CategoryListComponent implements OnInit {\n\n  categories: Category[];\n\n  constructor(private router: Router, private categoryService: CategoryService) { }\n\n  ngOnInit() {\n    this.categoryService.getCategories()\n      .subscribe( data => {\n        this.categories = data;\n      });\n  }\n\n  deleteCategory(category: Category): void {\n    this.categoryService.deleteCategory(category.id)\n      .subscribe( data => {\n        this.categories = this.categories.filter(u => u !== category);\n      });\n  }\n\n  editCategory(category: Category): void {\n    this.router.navigate(['category-edit', category.id]);\n  }\n\n  addCategory(): void {\n    this.router.navigate(['category-add']);\n  }\n\n  detailCategory(category: Category): void {\n    this.router.navigate(['category-detail', category.id]);\n  }\n}\n","module.exports = \"<p>\\n  XY INC\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/home\\\">XY INC</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavAltMarkup\\\" aria-controls=\\\"navbarNavAltMarkup\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavAltMarkup\\\">\\n    <div class=\\\"navbar-nav\\\">\\n      <a class=\\\"nav-item nav-link\\\" routerLink=\\\"home\\\">Home</a>\\n      <a class=\\\"nav-item nav-link\\\" routerLink=\\\"client-list\\\">Clientes</a>\\n      <a class=\\\"nav-item nav-link\\\" routerLink=\\\"product-list\\\">Produtos</a>\\n      <a class=\\\"nav-item nav-link\\\" routerLink=\\\"category-list\\\">Categorias</a>\\n      <a class=\\\"nav-item nav-link\\\" routerLink=\\\"order-list\\\">Ordens</a>\\n    </div>\\n  </div>\\n</nav>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\n\\n  <div class=\\\"col-md-6 col-md-offset-2\\\">\\n    <h1>Login </h1>\\n    <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email address:</label>\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" id=\\\"email\\\">\\n        <div *ngIf=\\\"submitted && loginForm.controls.email.errors\\\" class=\\\"error\\\">\\n          <div *ngIf=\\\"loginForm.controls.email.errors.required\\\">Email is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"pwd\\\">Password:</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" id=\\\"pwd\\\">\\n        <div *ngIf=\\\"submitted && loginForm.controls.password.errors\\\" class=\\\"error\\\">\\n          <div *ngIf=\\\"loginForm.controls.password.errors.required\\\">Password is required</div>\\n        </div>\\n      </div>\\n      <button class=\\\"btn btn-default\\\">Login</button>\\n      <div *ngIf=\\\"invalidLogin\\\" class=\\\"error\\\">\\n        <div>Invalid credentials.</div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '../service/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  submitted = false;\n  invalidLogin = false;\n  constructor(private formBuilder: FormBuilder, private router: Router, private authService: AuthenticationService) { }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n        this.router.navigate(['home']);\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthenticationService {\n  constructor(private http: HttpClient) {\n  }\n\n  login(username: string, password: string) {\n    return this.http.post<any>('/api/authenticate', {username: username, password: password})\n      .pipe(map(user => {\n        // login successful if there's a jwt token in the response\n        if (user && user.token) {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          localStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user;\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Category } from './../model/category';\n\n@Injectable()\nexport class CategoryService {\n  constructor(private http: HttpClient) { }\n  baseUrl = 'http://localhost:8080/category';\n\n  getCategories() {\n    return this.http.get<Category[]>(this.baseUrl);\n  }\n\n  getCategoryById(id: number) {\n    return this.http.get<Category>(this.baseUrl + '/' + id);\n  }\n\n  createCategory(category: Category) {\n    return this.http.post(this.baseUrl, category);\n  }\n\n  updateCategory(category: Category) {\n    return this.http.put(this.baseUrl, category);\n  }\n\n  deleteCategory(id: number) {\n    return this.http.delete(this.baseUrl + '/' + id);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}